<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAlgCWAAD/2wBDAAMCAgMCAgMDAwMEAwMEBQgFBQQEBQoHBwYIDAoMDAsKCwsN
        DhIQDQ4RDgsLEBYQERMUFRUVDA8XGBYUGBIUFRT/2wBDAQMEBAUEBQkFBQkUDQsNFBQUFBQUFBQUFBQU
        FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBT/wAARCAEOAXIDAREAAhEBAxEB/8QA
        HQABAAICAwEBAAAAAAAAAAAAAAgJBQcDBAYBAv/EAFEQAAEDAwIDBAILCwgJBQAAAAABAgMEBQYHEQgS
        IQkTMUEUURUiIzJCYXGBkaHSFhcZNlJWV5KVsbM3YnJ0dZSiwRglMzQ1Q3OywkRjgpPw/8QAFAEBAAAA
        AAAAAAAAAAAAAAAAAP/EABQRAQAAAAAAAAAAAAAAAAAAAAD/2gAMAwEAAhEDEQA/AIeAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPoHwAAAAAAAAAAAAAAAAAAAAAAAA
        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
        SytmieqbojkXdF28wO7mOX3TPcmr7/ep0qbpXSLLPK1iMRzvXsnRAMOi8qoqdFTzA3C/iw1EqLbDSVdX
        a7jJDSuo46+utcM1Y2JW8qok7mq/fZfHcDyuAaz5VprTXaks1ZA633ZqJXUFdTsqaafZd0V0b0Vqqi+C
        7AcOoOrmT6nS21b7WROp7bH3VHRUkDaemp277ryRM2a3fzVE6gervXFNnmRY+lmuT7NWUyUbaBss1ogd
        O2FrUa1qS8vMioieO4HXxTiZzfD8SoMao32iqtFAr3U0NxtMFSsSvcrnbOe1V6qqgdLCOIDL9PrNcbTa
        pLbJbLhUpV1FLXW6KpjWVN9nIj0Xbx8gMJXapZDV51DmENTDa77C9skU1sgbTMYrfDZjERE9S+tAPX3/
        AIpM8yK0Xy21Etnp4b3GkVxlobTBBNUtRd/bva1FXr1A62LcSubYhiVuxmkktVZZrc576SnuVrhqu5c9
        d3K1XoqpuoGt7vdJr3day4VDYm1FXM+eRIY0jYjnKqrytTo1N16IngB1AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAB//2Q==
</value>
  </data>
</root>